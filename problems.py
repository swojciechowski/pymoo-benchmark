from pymoo.problems.single import (
    Ackley,
    CantileveredBeam,
    Griewank,
    Himmelblau,
    Knapsack,
    PressureVessel,
    Rastrigin,
    Rosenbrock,
    Schwefel,
    Sphere,
    Zakharov,
    G1,
    G2,
    G3,
    G4,
    G5,
    G6,
    G7,
    G8,
    G9,
    G10,
    G11,
    G12,
    G13,
    G14,
    G15,
    G16,
    G17,
    G18,
    G19,
    G20,
    G21,
    G22,
    G23,
    G24,
)

from pymoo.problems.multi import (
    BNH,
    Carside,
    CTP1,
    CTP2,
    CTP3,
    CTP4,
    CTP5,
    CTP6,
    CTP7,
    CTP8,
    DASCMOP1,
    DASCMOP2,
    DASCMOP3,
    DASCMOP4,
    DASCMOP5,
    DASCMOP6,
    DASCMOP7,
    DASCMOP8,
    DASCMOP9,
    MODAct,
    MW1,
    MW2,
    MW3,
    MW4,
    MW5,
    MW6,
    MW7,
    MW8,
    MW9,
    MW10,
    MW11,
    MW12,
    MW13,
    MW14,
    Kursawe,
    OSY,
    SRN,
    TNK,
    Truss2D,
    WeldedBeam,
    ZDT1,
    ZDT2,
    ZDT3,
    ZDT4,
    ZDT5,
    ZDT6,
)

from pymoo.problems.many import (
    DTLZ1,
    C1DTLZ1,
    DC1DTLZ1,
    DC1DTLZ3,
    DC2DTLZ1,
    DC2DTLZ3,
    DC3DTLZ1,
    DC3DTLZ3,
    C1DTLZ3,
    C2DTLZ2,
    C3DTLZ1,
    C3DTLZ4,
    ScaledDTLZ1,
    ConvexDTLZ2,
    ConvexDTLZ4,
    DTLZ2,
    DTLZ3,
    DTLZ4,
    DTLZ5,
    DTLZ6,
    DTLZ7,
    InvertedDTLZ1,
    WFG1,
    WFG2,
    WFG3,
    WFG4,
    WFG5,
    WFG6,
    WFG7,
    WFG8,
    WFG9,
)

from pymoo.problems.dynamic.df import (
    DF1,
    DF2,
    DF3,
    DF4,
    DF5,
    DF6,
    DF7,
    DF8,
    DF9,
    DF10,
    DF11,
    DF12,
    DF13,
    DF14,
)

SINGLE_OBJECTIVE_PROBLEMS = [
    ("Ackley", Ackley, {}),
    ("CantileveredBeam", CantileveredBeam, {}),
    ("Griewank", Griewank, {}),
    ("Himmelblau", Himmelblau, {}),
    ("Knapsack", Knapsack, {}),
    ("PressureVessel", PressureVessel, {}),
    ("Rastrigin", Rastrigin, {}),
    ("Rosenbrock", Rosenbrock, {}),
    ("Schwefel", Schwefel, {}),
    ("Sphere", Sphere, {}),
    ("Zakharov", Zakharov, {}),
    ("G1", G1, {}),
    ("G2", G2, {}),
    ("G3", G3, {}),
    ("G4", G4, {}),
    ("G5", G5, {}),
    ("G6", G6, {}),
    ("G7", G7, {}),
    ("G8", G8, {}),
    ("G9", G9, {}),
    ("G10", G10, {}),
    ("G11", G11, {}),
    ("G12", G12, {}),
    ("G13", G13, {}),
    ("G14", G14, {}),
    ("G15", G15, {}),
    ("G16", G16, {}),
    ("G17", G17, {}),
    ("G18", G18, {}),
    ("G19", G19, {}),
    ("G20", G20, {}),
    ("G21", G21, {}),
    ("G22", G22, {}),
    ("G23", G23, {}),
    ("G24", G24, {}),
]

MULTI_OBJECTIVE_PROBLEMS = [
    ("BNH", BNH, {}),
    ("Carside", Carside, {}),
    ("CTP1", CTP1, {}),
    ("CTP2", CTP2, {}),
    ("CTP3", CTP3, {}),
    ("CTP4", CTP4, {}),
    ("CTP5", CTP5, {}),
    ("CTP6", CTP6, {}),
    ("CTP7", CTP7, {}),
    ("CTP8", CTP8, {}),
    ("DASCMOP1", DASCMOP1, {}),
    ("DASCMOP2", DASCMOP2, {}),
    ("DASCMOP3", DASCMOP3, {}),
    ("DASCMOP4", DASCMOP4, {}),
    ("DASCMOP5", DASCMOP5, {}),
    ("DASCMOP6", DASCMOP6, {}),
    ("DASCMOP7", DASCMOP7, {}),
    ("DASCMOP8", DASCMOP8, {}),
    ("DASCMOP9", DASCMOP9, {}),
    ("MODAct", MODAct, {}),
    ("MW1", MW1, {}),
    ("MW2", MW2, {}),
    ("MW3", MW3, {}),
    ("MW4", MW4, {}),
    ("MW5", MW5, {}),
    ("MW6", MW6, {}),
    ("MW7", MW7, {}),
    ("MW8", MW8, {}),
    ("MW9", MW9, {}),
    ("MW10", MW10, {}),
    ("MW11", MW11, {}),
    ("MW12", MW12, {}),
    ("MW13", MW13, {}),
    ("MW14", MW14, {}),
    ("Kursawe", Kursawe, {}),
    ("OSY", OSY, {}),
    ("SRN", SRN, {}),
    ("TNK", TNK, {}),
    ("Truss2D", Truss2D, {}),
    ("WeldedBeam", WeldedBeam, {}),
    ("ZDT1", ZDT1, {}),
    ("ZDT2", ZDT2, {}),
    ("ZDT3", ZDT3, {}),
    ("ZDT4", ZDT4, {}),
    ("ZDT5", ZDT5, {}),
    ("ZDT6", ZDT6, {}),
]

MANY_OBJECTIVE_PROBLEMS = [
    ("DTLZ1", DTLZ1, {}),
    ("C1DTLZ1", C1DTLZ1, {}),
    ("DC1DTLZ1", DC1DTLZ1, {}),
    ("DC1DTLZ3", DC1DTLZ3, {}),
    ("DC2DTLZ1", DC2DTLZ1, {}),
    ("DC2DTLZ3", DC2DTLZ3, {}),
    ("DC3DTLZ1", DC3DTLZ1, {}),
    ("DC3DTLZ3", DC3DTLZ3, {}),
    ("C1DTLZ3", C1DTLZ3, {}),
    ("C2DTLZ2", C2DTLZ2, {}),
    ("C3DTLZ1", C3DTLZ1, {}),
    ("C3DTLZ4", C3DTLZ4, {}),
    ("ScaledDTLZ1", ScaledDTLZ1, {}),
    ("ConvexDTLZ2", ConvexDTLZ2, {}),
    ("ConvexDTLZ4", ConvexDTLZ4, {}),
    ("DTLZ2", DTLZ2, {}),
    ("DTLZ3", DTLZ3, {}),
    ("DTLZ4", DTLZ4, {}),
    ("DTLZ5", DTLZ5, {}),
    ("DTLZ6", DTLZ6, {}),
    ("DTLZ7", DTLZ7, {}),
    ("InvertedDTLZ1", InvertedDTLZ1, {}),
    ("WFG1", WFG1, {}),
    ("WFG2", WFG2, {}),
    ("WFG3", WFG3, {}),
    ("WFG4", WFG4, {}),
    ("WFG5", WFG5, {}),
    ("WFG6", WFG6, {}),
    ("WFG7", WFG7, {}),
    ("WFG8", WFG8, {}),
    ("WFG9", WFG9, {}),
]

DYNAMIC_OBJECTIVE_PROBLEMS = [
    ("DF1", DF1, {}),
    ("DF2", DF2, {}),
    ("DF3", DF3, {}),
    ("DF4", DF4, {}),
    ("DF5", DF5, {}),
    ("DF6", DF6, {}),
    ("DF7", DF7, {}),
    ("DF8", DF8, {}),
    ("DF9", DF9, {}),
    ("DF10", DF10, {}),
    ("DF11", DF11, {}),
    ("DF12", DF12, {}),
    ("DF13", DF13, {}),
    ("DF14", DF14, {}),
]

if __name__ == "__main__":
    from tabulate import tabulate
    import pandas as pd

    PROBLEMS = [
        *SINGLE_OBJECTIVE_PROBLEMS,
        *MULTI_OBJECTIVE_PROBLEMS,
        *MANY_OBJECTIVE_PROBLEMS,
        *DYNAMIC_OBJECTIVE_PROBLEMS
    ]

    table = []

    for problem_name, problem_cb, problem_args in PROBLEMS:
        try:
            problem = problem_cb(**problem_args)
        except Exception as e:
            print(f"{problem_name}: {e}")
            continue

        table.append([problem_name, problem.n_var, problem.n_obj, problem.n_constr])

    df = pd.DataFrame(table, columns=["Problem", "Variables", "Objectives", "Contraints"])
    df = df.set_index("Problem")
    df.to_csv("_problems.csv")

    tab = tabulate(df, df.columns)
    print(tab)